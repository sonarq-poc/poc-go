on:
  # Trigger analysis when pushing to your main branches, and when creating a pull request.
  push:
    branches:
      - main
  pull_request:
      types: [opened, synchronize, reopened]

name: SonarQube
jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    #GOPATH env variable needs to be set to where the source code is
    - name: Run tests
      run: |
        cd ./src
        export GOPATH=$PWD:$PWD
        ls
        env | grep GOPATH
        go test -v -outputdir coverage -coverprofile="coverage.out" -json > ./coverage/test-report.json
      # Path configuration was added in SQ UI
      # -Dsonar.sonar.go.coverage.reportPaths=src/coverage/coverage.out
      # -Dsonar.sonar.go.tests.reportPaths=src/coverage/test-report.json

    - name: List
      run: |
        ls -la
        cd src
        cd coverage
        cat coverage.out
        cat test-report.json
        
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
        args: >
          -Dsonar.verbose=true
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        
   # Check the Quality Gate status.
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL

    # Optionally you can use the output from the Quality Gate in another step.
    # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
    - name: "Example show SonarQube Quality Gate Status value"
      run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
